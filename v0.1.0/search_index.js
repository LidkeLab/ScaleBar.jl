var documenterSearchIndex = {"docs":
[{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Basic-Examples","page":"Examples","title":"Basic Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here are some examples of how to use ScaleBar.jl in common scenarios.","category":"page"},{"location":"examples/#Physical-Scale-Bars","page":"Examples","title":"Physical Scale Bars","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"When working with microscopy images where you know the physical size of each pixel:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Images, ScaleBar\n\n# Create a test image (or load your own)\nimg = RGB.(ones(512, 512))\n\n# Add a scale bar representing 10μm (assuming 0.1μm per pixel)\nscalebar!(img, 0.1, 10; units=\"μm\")","category":"page"},{"location":"examples/#Pixel-based-Scale-Bars","page":"Examples","title":"Pixel-based Scale Bars","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"When you just need a scale bar of a specific pixel length:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Images, ScaleBar\n\n# Create a test image\nimg = RGB.(ones(512, 512))\n\n# Add a 50-pixel scale bar\nresult = scalebar(img; length=50, color=:black)\nimg_with_bar = result.image\npixel_length = result.pixel_length  # Length of the scale bar in pixels","category":"page"},{"location":"examples/#Positioning-Examples","page":"Examples","title":"Positioning Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Scale bars can be positioned at any of the four corners of the image:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Bottom right (default)\nscalebar!(img, 50; position=:br)\n\n# Bottom left\nscalebar!(img, 50; position=:bl)\n\n# Top right\nscalebar!(img, 50; position=:tr)\n\n# Top left\nscalebar!(img, 50; position=:tl)","category":"page"},{"location":"examples/#Customization-Examples","page":"Examples","title":"Customization Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"You can customize various aspects of the scale bar:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Custom dimensions\nscalebar!(img, 100;    # 100 pixels long\n    width=10,      # 10 pixels tall\n    padding=20     # 20 pixels from the edge\n)\n\n# Custom color\nscalebar!(img, 50; color=:black)  # Black scale bar (default is white)","category":"page"},{"location":"examples/#Real-world-Examples","page":"Examples","title":"Real-world Examples","text":"","category":"section"},{"location":"examples/#Microscopy-Image-Example","page":"Examples","title":"Microscopy Image Example","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here's a common workflow for microscopy images:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Images, ScaleBar, FileIO\n\n# Load a microscopy image\nimg = load(\"microscopy_image.tif\")\n\n# Add a scale bar (assuming pixel size is 0.05μm)\npixel_size = 0.05  # μm per pixel\nscalebar!(img, pixel_size, 10;  # 10μm scale bar\n    position=:br,        # Bottom right\n    color=:white,        # White color\n    units=\"μm\"           # Units displayed in output\n)\n\n# Save the result\nsave(\"microscopy_with_scalebar.tif\", img)","category":"page"},{"location":"examples/#Processing-Multiple-Images","page":"Examples","title":"Processing Multiple Images","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"You can easily process multiple images in a batch:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Images, ScaleBar, FileIO\n\n# Process all TIF files in a directory\nimage_dir = \"path/to/images\"\noutput_dir = \"path/to/output\"\nisdir(output_dir) || mkdir(output_dir)\n\n# Pixel size in μm\npixel_size = 0.1\n\nfor file in readdir(image_dir)\n    if endswith(file, \".tif\") || endswith(file, \".tiff\")\n        # Load image\n        img = load(joinpath(image_dir, file))\n        \n        # Add scale bar\n        scalebar!(img, pixel_size, 10;\n            position=:br, \n            color=:white, \n            units=\"μm\"\n        )\n        \n        # Save result\n        save(joinpath(output_dir, file), img)\n    end\nend","category":"page"},{"location":"examples/#Return-Value-Examples","page":"Examples","title":"Return Value Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The non-mutating scalebar function returns a named tuple with the image and information about the scale bar:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Physical units version\nresult = scalebar(img, 0.1; physical_length=10, units=\"μm\")\nnew_img = result.image                  # The new image with a scale bar\nphysical_length = result.physical_length # The physical length of the scale bar\npixel_length = result.pixel_length      # The length in pixels\nunits = result.units                    # The units used\n\n# Using destructuring for cleaner code\n(; image, physical_length, pixel_length, units) = scalebar(img, 0.1; physical_length=5, units=\"μm\")\nprintln(\"Scale bar is $physical_length $units ($pixel_length pixels)\")\n\n# Pixel version\nresult = scalebar(img; length=50)\nnew_img = result.image\npixel_length = result.pixel_length","category":"page"},{"location":"examples/#Advanced-Usage","page":"Examples","title":"Advanced Usage","text":"","category":"section"},{"location":"examples/#Creating-a-Consistent-Scale-Bar-for-Image-Series","page":"Examples","title":"Creating a Consistent Scale Bar for Image Series","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"When working with a series of images that should have consistent scale bars:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Images, ScaleBar, FileIO\n\nfunction add_consistent_scalebar(image_paths, output_dir, pixel_size, physical_length; position=:br, width=nothing, padding=10, color=:white, units=\"\")\n    # Create output directory if it doesn't exist\n    isdir(output_dir) || mkdir(output_dir)\n    \n    # Process each image\n    for path in image_paths\n        # Load image\n        img = load(path)\n        \n        # Add scale bar with consistent settings\n        scalebar!(img, pixel_size, physical_length, position=position, width=width, padding=padding, color=color, units=units)\n        \n        # Save with the same filename\n        filename = basename(path)\n        save(joinpath(output_dir, filename), img)\n    end\nend\n\n# Usage\nimage_paths = [\"img1.tif\", \"img2.tif\", \"img3.tif\"]\nadd_consistent_scalebar(\n    image_paths, \n    \"output\", \n    0.1,                 # pixel size\n    5,                   # 5μm scale bar\n    position=:br,        # bottom right\n    color=:white,        # white color\n    units=\"μm\"           # show units\n)","category":"page"},{"location":"#ScaleBar.jl","page":"Home","title":"ScaleBar.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The ScaleBar package is a tool for adding scale bars to images, particularly useful for scientific and microscopy applications. It provides a simple, consistent API for adding scale bars with customizable positions, sizes, and colors.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Scale bars are essential for providing spatial context in scientific images, especially in microscopy where the actual size of objects isn't immediately apparent. ScaleBar.jl makes it easy to add professional-looking scale bars to your images.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Key features:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Add scale bars with physical units (μm, nm, etc.) based on pixel size\nAdd scale bars with specific pixel dimensions\nPosition scale bars in any corner of the image\nCustomize size, color, and padding\nBoth in-place and non-destructive operations","category":"page"},{"location":"#Basic-Usage","page":"Home","title":"Basic Usage","text":"","category":"section"},{"location":"#Physical-Scale-Bars","page":"Home","title":"Physical Scale Bars","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To add a scale bar based on physical units:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Images, ScaleBar\n\n# Create a test image with gray background for better visibility\nimg = RGB.(fill(0.5, 512, 512))\n\n# Add a scale bar representing 10μm (assuming 0.1μm per pixel)\nscalebar!(img, 0.1, 10; units=\"μm\")","category":"page"},{"location":"#Pixel-Based-Scale-Bars","page":"Home","title":"Pixel-Based Scale Bars","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To add a scale bar with pixel dimensions:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Images, ScaleBar\n\n# Create a test image with gray background for better visibility\nimg = RGB.(fill(0.5, 512, 512))\n\n# Add a 50-pixel scale bar\nscalebar!(img, 50)","category":"page"},{"location":"#Different-Image-Types","page":"Home","title":"Different Image Types","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"ScaleBar.jl works with various image types:","category":"page"},{"location":"#RGB-Images","page":"Home","title":"RGB Images","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"# RGB image with gray background\nimg_rgb = RGB.(fill(0.5, 512, 512))\nscalebar!(img_rgb, 0.1, 10; units=\"μm\")","category":"page"},{"location":"#Grayscale-Images","page":"Home","title":"Grayscale Images","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"# Grayscale image\nimg_gray = Gray.(fill(0.5, 512, 512))\nscalebar!(img_gray, 0.1, 10; units=\"μm\")","category":"page"},{"location":"#Float64-Arrays-with-Values-1.0","page":"Home","title":"Float64 Arrays with Values > 1.0","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For Float64 arrays with values greater than 1.0, the scale bar is added using the maximum value:","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Float64 array with values > 1.0\nimg_float = rand(512, 512) * 100.0  # Values between 0 and 100\nscalebar!(img_float, 0.1, 10; units=\"μm\")\n# Scale bar will be drawn with the maximum value in the array\n# When saving to images, normalize to [0,1] range (e.g., img ./= maximum(img))","category":"page"},{"location":"#Positioning","page":"Home","title":"Positioning","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can position the scale bar at any of the four corners of the image using CairoMakie-style positioning symbols:","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Top left\nscalebar!(img, 50; position=:tl)\n\n# Top right\nscalebar!(img, 50; position=:tr)\n\n# Bottom left\nscalebar!(img, 50; position=:bl)\n\n# Bottom right (default)\nscalebar!(img, 50; position=:br)","category":"page"},{"location":"#Non-destructive-Scale-Bar-Addition","page":"Home","title":"Non-destructive Scale Bar Addition","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The non-mutating scalebar function returns more than just the image - it provides a named tuple with information about the scale bar:","category":"page"},{"location":"","page":"Home","title":"Home","text":"# With physical units\nresult = scalebar(img, 0.1; units=\"μm\")\nimg_with_bar = result.image                 # The new image with a scale bar\nphysical_length = result.physical_length    # The physical length of the scale bar\npixel_length = result.pixel_length          # The length in pixels\nunits = result.units                        # The units used\n\n# With pixel dimensions\nresult = scalebar(img; length=50)\nimg_with_bar = result.image                 # The new image with a scale bar\npixel_length = result.pixel_length          # The length of the scale bar in pixels\n\n# You can also use destructuring syntax\n(; image, physical_length, pixel_length, units) = scalebar(img, 0.1, units=\"μm\")","category":"page"},{"location":"#API-Documentation","page":"Home","title":"API Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For a comprehensive overview of the API, use the help mode on api_overview:","category":"page"},{"location":"","page":"Home","title":"Home","text":"?ScaleBar.api_overview","category":"page"},{"location":"","page":"Home","title":"Home","text":"Or access the complete API documentation programmatically:","category":"page"},{"location":"","page":"Home","title":"Home","text":"docs = ScaleBar.api_overview()","category":"page"},{"location":"#API-Reference","page":"Home","title":"API Reference","text":"","category":"section"},{"location":"#ScaleBar.scalebar!","page":"Home","title":"ScaleBar.scalebar!","text":"scalebar!(img, pixel_size, physical_length; kwargs...)\n\nAdd a scale bar to an image in-place, using physical units.\n\nArguments\n\nimg::AbstractArray : Input image\npixel_size::Real : Size of each pixel in physical units (e.g., nm, μm)\nphysical_length::Real : Length of the scale bar in physical units\n\nKeyword Arguments\n\nposition::Symbol : Position of the scale bar (`:tl`, `:tr`, `:bl`, `:br`), default: `:br`\nwidth::Integer : Width of the scale bar in pixels, default: auto-calculated\npadding::Integer : Padding from the edge of the image in pixels, default: 10\ncolor::Symbol : Color of the scale bar (`:white` or `:black`), default: `:white`\nunits::String : Units for the physical length (e.g., \"nm\", \"μm\"), default: \"\"\n\nReturns\n\nNothing, modifies img in-place\n\nExamples\n\nusing Images, ScaleBar\n\n# Create a test image with gray background for better visibility\nimg = RGB.(fill(0.5, 512, 512))\n\n# Add a scale bar representing 10μm (assuming 0.1μm per pixel)\nscalebar!(img, 0.1, 10; position=:br, units=\"μm\")\n\n\n\n\n\nscalebar!(img, length; kwargs...)\n\nAdd a scale bar to an image in-place, specifying dimensions in pixels.\n\nArguments\n\nimg::AbstractArray : Input image\nlength::Integer : Length of the scale bar in pixels\n\nKeyword Arguments\n\nposition::Symbol : Position of the scale bar (`:tl`, `:tr`, `:bl`, `:br`), default: `:br`\nwidth::Integer : Width of the scale bar in pixels, default: auto-calculated\npadding::Integer : Padding from the edge of the image in pixels, default: 10\ncolor::Symbol : Color of the scale bar (`:white` or `:black`), default: `:white`\n\nReturns\n\nNothing, modifies img in-place\n\nExamples\n\nusing Images, ScaleBar\n\n# Create a test image with gray background for better visibility\nimg = RGB.(fill(0.5, 512, 512))\n\n# Add a 50-pixel scale bar\nscalebar!(img, 50; position=:br)\n\n\n\n\n\n","category":"function"},{"location":"#ScaleBar.scalebar","page":"Home","title":"ScaleBar.scalebar","text":"scalebar(img, pixel_size; physical_length=nothing, kwargs...)\n\nCreate a new image with a scale bar, using physical units.\n\nArguments\n\nimg::AbstractArray : Input image\npixel_size::Real : Size of each pixel in physical units (e.g., nm, μm)\n\nKeyword Arguments\n\nphysical_length::Union{Real, Nothing} : Length of the scale bar in physical units, default: auto-calculated\nposition::Symbol : Position of the scale bar (`:tl`, `:tr`, `:bl`, `:br`), default: `:br`\nwidth::Union{Integer, Nothing} : Width of the scale bar in pixels, default: auto-calculated\npadding::Integer : Padding from the edge of the image in pixels, default: 10\ncolor::Symbol : Color of the scale bar (`:white` or `:black`), default: `:white`\nunits::String : Units for the physical length (e.g., \"nm\", \"μm\"), default: \"\"\n\nReturns\n\nA named tuple containing:\n- image: A new image with the scale bar added\n- physical_length: The physical length of the scale bar\n- pixel_length: The length of the scale bar in pixels\n- units: The units of the physical length\n\nExamples\n\nusing Images, ScaleBar\n\n# Create a test image with gray background for better visibility\nimg = RGB.(fill(0.5, 512, 512))\n\n# Add a scale bar with auto-calculated length (assuming 0.1μm per pixel)\nresult = scalebar(img, 0.1; position=:br, units=\"μm\")\nimg_with_bar1 = result.image\nphysical_length = result.physical_length  # The physical length that was used\npixel_length = result.pixel_length        # The length in pixels\nunits = result.units                      # The units of the physical length\n\n# Add a scale bar with explicit length of 10μm\nresult = scalebar(img, 0.1; physical_length=10, position=:br, units=\"μm\")\nimg_with_bar2 = result.image\n\n# Using destructuring syntax\n(; image, physical_length, pixel_length, units) = scalebar(img, 0.1; position=:br, units=\"μm\")\n\n\n\n\n\nscalebar(img; length=nothing, kwargs...)\n\nCreate a new image with a scale bar, specifying dimensions in pixels.\n\nArguments\n\nimg::AbstractArray : Input image\n\nKeyword Arguments\n\nlength::Union{Integer, Nothing} : Length of the scale bar in pixels, default: auto-calculated\nposition::Symbol : Position of the scale bar (`:tl`, `:tr`, `:bl`, `:br`), default: `:br`\nwidth::Union{Integer, Nothing} : Width of the scale bar in pixels, default: auto-calculated\npadding::Integer : Padding from the edge of the image in pixels, default: 10\ncolor::Symbol : Color of the scale bar (`:white` or `:black`), default: `:white`\n\nReturns\n\nA named tuple containing:\n- image: A new image with the scale bar added\n- pixel_length: The length of the scale bar in pixels\n\nExamples\n\nusing Images, ScaleBar\n\n# Create a test image with gray background for better visibility\nimg = RGB.(fill(0.5, 512, 512))\n\n# Add a scale bar with auto-calculated length\nresult = scalebar(img; position=:br)\nimg_with_bar1 = result.image\npixel_length = result.pixel_length  # The length in pixels that was used\n\n# Add a 50-pixel scale bar with explicit length\nresult = scalebar(img; length=50, position=:br)\nimg_with_bar2 = result.image\n\n# Using destructuring syntax\n(; image, pixel_length) = scalebar(img; position=:br)\n\n\n\n\n\n","category":"function"}]
}
